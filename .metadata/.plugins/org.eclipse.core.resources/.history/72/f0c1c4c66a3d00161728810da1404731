package com.mallimander.particulate;


import com.badlogic.gdx.ApplicationAdapter;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.Input;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Pixmap;
import com.badlogic.gdx.graphics.Pixmap.Format;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;

public class Particulate extends ApplicationAdapter {
	SpriteBatch batch;
	Texture img;
	Texture pixmapTex;
	Input input;
	
	private int screenWidth = 1440;
	private int screenHeight = 900;
	
	private int mX = 0;
	private int mY = 0;
	
	private Particle [] particles;
	private int numParts = 0;
	
	private Emitter em0;
	
	
	
	@Override
	public void create () {
		batch = new SpriteBatch();
		img = new Texture("badlogic.jpg");
		input = Gdx.input;
		particles = new Particle[100];
		em0 = new Emitter(100, 200, (byte)0);
		
//		Pixmap pixmap = new Pixmap( 64, 64, Format.RGBA8888 );
//		for(int i = 0; i < 64; i++){
//			for(int j = 0; j < 64; j++){
//				
//				float rT = (float)(i/64f);
////				float gT = (float)(j/64f);
//				float gT = (float)((i+j)/128f);
//				
//				pixmap.setColor( 0, gT, 0, 1.0f);
//				pixmap.drawPixel(i, j);
//			}
//		}
////		pixmap.setColor( 1, 1, 1, 1.0f );
////		pixmap.drawPixel(1, 1);
////		pixmap.fillCircle( 32, 32, 31 );
////		pixmap.setColor( 0.5f, 0.5f, 0.5f, 1.0f );
////		pixmap.fillCircle( 32, 32, 23 );
////		pixmap.setColor( 1, 1, 1, 1.0f);
////		pixmap.fillCircle( 32, 32, 16 );
//		pixmapTex = new Texture( pixmap );
//		pixmap.dispose();
		
	}
	
	private void input() {
		
		if(input.isTouched()){
			mX = input.getX()-32;
			mY = screenHeight-input.getY()-32;
			if(numParts < 99){
				particles[numParts] = em0.Emit(mX, mY);
				numParts ++;
			}
		}
		
	}

	@Override
	public void render () {
		input();
		update();
		
		Gdx.gl.glClearColor(0.1f, 0, 0.1f, 1);
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		
		batch.begin();
		for(int i = 0; i < numParts; i++){
			batch.draw(particles[i].getTexture(), particles[i].x, particles[i].y);
		}
		batch.end();
	}
	
	private void update(){
		
//		for(int i = 0; i < 100; i++){
//			particles[i] = em0.Emit(mX, mY);
//		}
		
	}
	
	private void makePixmap(){
		Pixmap pixmap = new Pixmap( 64, 64, Format.RGBA8888 );
	
		for(int i = 0; i < 64; i++){
			for(int j = 0; j < 64; j++){
				
				float rT = (float)((64-i)/64f);
				float gT = (float)((64-j)/64f);
//				float gT = (float)((i+j)/128f);
				
				pixmap.setColor( gT, gT, 0, 1.0f);
				if(Math.random() < 0.3 && Math.abs(i*2-32)>32){
					pixmap.drawPixel(i, j);
				}
				
			}
		}
		
		pixmapTex = new Texture( pixmap );
		pixmap.dispose();
		
	}
}
